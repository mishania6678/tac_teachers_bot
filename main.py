from aiogram import Bot, Dispatcher, types, executor
from aiogram.utils.exceptions import MessageNotModified

from admin import Admin

from threading import Thread

bot = Bot('1941908944:AAH-74UPpJW4ZcxUwx67lZdDTi_5Sib_S3o')
dp = Dispatcher(bot)

admin = Admin()

# start_pressed = True
name_expected, selecting_expected, schedule_expected, = False, False, False

new_classes_kb = False


@dp.message_handler(commands=['start'])
async def start(message: types.Message):
    global start_pressed, name_expected

    teachers = ['wargkul', 'nizhnitschek', 'maxbenival']
    if message.from_user.username not in teachers:
        await bot.send_message(message.chat.id, text='‚ö† –¶–∏–º –±–æ—Ç–æ–º –º–æ–∂—É—Ç—å –∫–æ—Ä–∏—Å—Ç—É–≤–∞—Ç–∏—Å—è –ª–∏—à–µ –≤–∏–∫–ª–∞–¥–∞—á—ñ –æ–Ω–ª–∞–π–Ω-—à–∫–æ–ª–∏ T&C')

    start_pressed = True
    if start_pressed:
        admin.switch_user(f'@{message.from_user.username}')
        Thread(target=admin.remove_ended_lessons).start()

        await bot.send_message(message.chat.id, text='üî° –í–≤–µ–¥—ñ—Ç—å –≤–∞—à–µ —ñ–º\'—è —Ç–∞ –Ω—ñ–∫–Ω–µ–π–º —É —Ç–µ–ª–µ–≥—Ä–∞–º—ñ\n'
                                                     '–ü—Ä–∏–∫–ª–∞–¥: –ö–æ–ª—è, @nizhnitschek')
        name_expected = True
        start_pressed = False


@dp.message_handler(content_types=['text'])
async def text_handler(message: types.Message):
    global name_expected, selecting_expected, schedule_expected, new_classes_kb

    admin.switch_user(f'@{message.from_user.username}')

    try:
        if not (name_expected or selecting_expected or schedule_expected):
            if message.text == '–ù–∞–∑–∞–¥ ‚¨ÖÔ∏è':
                funcs_kb = admin.create_kb(
                    '–ú—ñ–π —Ä–æ–∑–∫–ª–∞–¥ üìÖ', '–£—Ä–æ–∫–∏ üìö',
                    '–ó–º—ñ–Ω–∏—Ç–∏ –∫–ª–∞—Å–∏ üè´', '–ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è ‚öô'
                )

                await bot.send_message(message.chat.id, text='.', reply_markup=funcs_kb)

            elif message.text == '–ú—ñ–π —Ä–æ–∑–∫–ª–∞–¥ üìÖ':
                schedule_kb = admin.create_kb(
                    '–ü–æ–¥–∏–≤–∏—Ç–∏—Å—è —É—Ä–æ–∫–∏ –Ω–∞ —Å—å–æ–≥–æ–¥–Ω—ñ üëÅ', '–ü–æ–¥–∏–≤–∏—Ç–∏—Å—è —É—Ä–æ–∫–∏ –Ω–∞ –¥–∞—Ç—É üóì',
                    '–ó–º—ñ–Ω–∏—Ç–∏ —Ä–æ–∑–∫–ª–∞–¥ üìã', '–ù–∞–∑–∞–¥ ‚¨ÖÔ∏è'
                )

                await bot.send_message(message.chat.id, text='.', reply_markup=schedule_kb)

            elif message.text == '–£—Ä–æ–∫–∏ üìö':
                lessons_kb = admin.create_kb(
                    '–î–æ–¥–∞—Ç–∏ —É—Ä–æ–∫ ‚ûï', '–í–∏–¥–∞–ª–∏—Ç–∏ —É—Ä–æ–∫ ‚ûñ',
                    '–ó–º—ñ–Ω–∏—Ç–∏ —É—Ä–æ–∫ ‚úè', '–ù–∞–∑–∞–¥ ‚¨ÖÔ∏è'
                )

                await bot.send_message(message.chat.id, text='.', reply_markup=lessons_kb)

            elif message.text == '–ó–º—ñ–Ω–∏—Ç–∏ –∫–ª–∞—Å–∏ üè´':
                admin.edit_classes, admin.edit_schedule = False, False
                admin.add_lesson, admin.delete_lesson, admin.edit_lesson = False, False, False
                new_classes_kb = True

                classes_kb = admin.create_kb(
                    ('1', 'class 1'), ('2', 'class 2'), ('3', 'class 3'), ('4', 'class 4'), ('5', 'class 5'),
                    ('6', 'class 6'), ('7', 'class 7'), ('8', 'class 8'), ('9', 'class 9'), ('10', 'class 10'),
                    ('11', 'class 11'), ('–ü—ñ–¥—Ç–≤–µ—Ä–¥–∏—Ç–∏ ‚úÖÔ∏èÔ∏è', 'class –ü—ñ–¥—Ç–≤–µ—Ä–¥–∏—Ç–∏ ‚úÖÔ∏è'),
                    kb_type='inline', tick_places=admin.classes
                )

                await bot.send_message(message.chat.id, text='üîÄ –í–∏–±–µ—Ä—ñ—Ç—å –∫–ª–∞—Å–∏:', reply_markup=classes_kb)

            elif message.text == '–ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è ‚öô':
                pass

            elif message.text == '–ó–º—ñ–Ω–∏—Ç–∏ —Ä–æ–∑–∫–ª–∞–¥ üìã':
                admin.edit_classes, admin.edit_schedule = False, True
                admin.add_lesson, admin.delete_lesson, admin.edit_lesson = False, False, False
                await bot.send_message(message.chat.id, text=f'üî° –í—ñ–¥–ø—Ä–∞–≤—Ç–µ –≤—ñ–¥—Ä–µ–¥–∞–≥–æ–≤–∞–Ω–∏–π —Ä–æ–∑–∫–ª–∞–¥\n`{admin.schedule}`',
                                       parse_mode='Markdown')

            elif message.text == '–ü–æ–¥–∏–≤–∏—Ç–∏—Å—è —É—Ä–æ–∫–∏ –Ω–∞ —Å—å–æ–≥–æ–¥–Ω—ñ üëÅ':
                pass

            elif message.text == '–ü–æ–¥–∏–≤–∏—Ç–∏—Å—è —É—Ä–æ–∫–∏ –Ω–∞ –¥–∞—Ç—É üóì':
                pass

            elif message.text == '–î–æ–¥–∞—Ç–∏ —É—Ä–æ–∫ ‚ûï':
                admin.edit_classes, admin.edit_schedule = False, False
                admin.add_lesson, admin.delete_lesson, admin.edit_lesson = True, False, False
                await bot.send_message(message.chat.id, text='üî° –í–≤–µ–¥—ñ—Ç—å –¥–∞—Ç—É —Ç–∞ —á–∞—Å —É—Ä–æ–∫—É\n–ü—Ä–∏–∫–ª–∞–¥: 08.06: 10.00')

            elif message.text == '–í–∏–¥–∞–ª–∏—Ç–∏ —É—Ä–æ–∫ ‚ûñ':
                admin.edit_classes, admin.edit_schedule = False, False
                admin.add_lesson, admin.delete_lesson, admin.edit_lesson = False, True, False
                await bot.send_message(message.chat.id, text='üî° –í–≤–µ–¥—ñ—Ç—å –¥–∞—Ç—É —Ç–∞ —á–∞—Å —É—Ä–æ–∫—É\n–ü—Ä–∏–∫–ª–∞–¥: 08.06: 10.00')

            elif message.text == '–ó–º—ñ–Ω–∏—Ç–∏ —É—Ä–æ–∫ ‚úè':
                admin.edit_classes, admin.edit_schedule = False, False
                admin.add_lesson, admin.delete_lesson, admin.edit_lesson = False, False, True
                await bot.send_message(message.chat.id, text='üî° –í–≤–µ–¥—ñ—Ç—å –¥–∞—Ç—É —Ç–∞ —á–∞—Å —É—Ä–æ–∫—É, —è–∫–∏–π —Ç—Ä–µ–±–∞ –∑–º—ñ–Ω–∏—Ç–∏, '
                                                             '–Ω–∞ —Ç–æ–π, –Ω–∞ —è–∫–∏–π —Ç—Ä–µ–±–∞ –∑–º—ñ–Ω–∏—Ç–∏'
                                                             '\n–ü—Ä–∏–∫–ª–∞–¥: 08.06: 10.00 -> 08.06: 16.00')

            elif admin.edit_schedule:
                admin.schedule = message.text.strip()
                admin.check_schedule(admin.schedule)

                admin._edit_schedule(admin.schedule)
                await bot.send_message(message.chat.id, text='–†–æ–∑–∫–ª–∞–¥ –∑–º—ñ–Ω–µ–Ω–æ üòÜ')

                admin.edit_schedule = False

            elif admin.add_lesson:
                if ':' not in message.text.strip():
                    await bot.send_message(message.chat.id, text='‚ùó–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–∏–π —Ñ–æ—Ä–º–∞—Ç –¥–∞—Ç–∏ —É—Ä–æ–∫—É. –°–ø—Ä–æ–±—É–π—Ç–µ —â–µ —Ä–∞–∑')
                    raise SyntaxError

                admin._add_lesson(message.text.strip())
                await bot.send_message(message.chat.id, text='–£—Ä–æ–∫ –¥–æ–¥–∞–Ω–æ üòÜ')
                admin.add_lesson = False

            elif admin.edit_lesson:
                if '->' not in message.text or not not ':' not in message.text.split('->')[0].strip() \
                        or ':' not in message.text.strip('->')[0].strip():
                    await bot.send_message(message.chat.id, text='‚ùó–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–∏–π —Ñ–æ—Ä–º–∞—Ç –¥–∞—Ç–∏ —É—Ä–æ–∫—É. –°–ø—Ä–æ–±—É–π—Ç–µ —â–µ —Ä–∞–∑')
                    raise SyntaxError

                state = admin._edit_lesson(
                    message.text.split('->')[0].strip(),
                    message.text.split('->')[1].strip()
                )

                await bot.send_message(message.chat.id,
                                       text='–£—Ä–æ–∫ –∑–º—ñ–Ω–µ–Ω–æ üòÜ' if state else 'üòÖ –í–≤–µ–¥–µ–Ω–æ—ó –¥–∞—Ç–∏ –Ω–µ–º–∞—î –≤ –±–∞–∑—ñ')
                admin.edit_lesson = False

            elif admin.delete_lesson:
                if ':' not in message.text.strip():
                    await bot.send_message(message.chat.id, text='‚ùó–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–∏–π —Ñ–æ—Ä–º–∞—Ç –¥–∞—Ç–∏ —É—Ä–æ–∫—É. –°–ø—Ä–æ–±—É–π—Ç–µ —â–µ —Ä–∞–∑')
                    raise SyntaxError

                state = admin._delete_lesson(message.text.strip())
                await bot.send_message(message.chat.id,
                                       text='–£—Ä–æ–∫ –≤–∏–¥–∞–ª–µ–Ω–æ üòÜ' if state else 'üòÖ –¢–∞–∫–æ–≥–æ —É—Ä–æ–∫—É –Ω–µ–º–∞—î –≤ –±–∞–∑—ñ')
                admin.edit_lesson = False

            else:
                await bot.send_message(message.chat.id, text='üòÖ –ö–æ–º–∞–Ω–¥–∞ –Ω–µ –≤–∏–±—Ä–∞–Ω–∞')

        else:
            if name_expected:
                if len(message.text.split()) != 2 or '@' not in message.text or ', ' not in message.text \
                        or message.text.index('@') < message.text.index(','):
                    await bot.send_message(message.chat.id, text='‚ùó–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–∏–π —Ñ–æ—Ä–º–∞—Ç –≤–≤–æ–¥—É —ñ–º–µ–Ω—ñ. –°–ø—Ä–æ–±—É–π—Ç–µ —â–µ —Ä–∞–∑')
                    raise SyntaxError

                admin.name = message.text.strip()

                subjs_kb = admin.create_kb(
                    ('–ú–∞—Ç–µ–º–∞—Ç–∏–∫–∞', 'subject –ú–∞—Ç–µ–º–∞—Ç–∏–∫–∞'), ('–£–∫—Ä.–º–æ–≤–∞', 'subject –£–∫—Ä.–º–æ–≤–∞'),
                    ('–ê–Ω–≥–ª.–º–æ–≤–∞', 'subject –ê–Ω–≥–ª.–º–æ–≤–∞'), ('–î–∞–ª—ñ ‚û°Ô∏è', 'subject –î–∞–ª—ñ ‚û°Ô∏è'),
                    kb_type='inline'
                )

                await bot.send_message(message.chat.id, text='üîÄ –í–∏–±–µ—Ä—ñ—Ç—å –ø—Ä–µ–¥–º–µ—Ç–∏, –Ω–∞ —è–∫–∏—Ö –≤–∏ —Å–ø–µ—Ü—ñ–∞–ª—ñ–∑—É—î—Ç–µ—Å—å:',
                                       reply_markup=subjs_kb)

                name_expected, selecting_expected = False, True

            elif schedule_expected:
                admin.schedule = message.text.strip()
                admin.check_schedule(admin.schedule)

                admin.add_teacher(name=admin.name, subjects=', '.join(admin.subjects),
                                    classes=', '.join(sorted(admin.classes)), schedule=admin.schedule.strip())

                funcs_kb = admin.create_kb(
                    '–ú—ñ–π —Ä–æ–∑–∫–ª–∞–¥ üìÖ', '–£—Ä–æ–∫–∏ üìö',
                    '–ó–º—ñ–Ω–∏—Ç–∏ –∫–ª–∞—Å–∏ üè´', '–ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è ‚öô'
                )

                await bot.send_message(message.chat.id, text='–í—ñ—Ç–∞—é! –í–∞—Å —É—Å–ø—ñ—à–Ω–æ –¥–æ–¥–∞–Ω–æ —É –±–∞–∑—É –≤—á–∏—Ç–µ–ª—ñ–≤ T&C! üòâ',
                                       reply_markup=funcs_kb)

                schedule_expected = False

        admin.update_teacher_vars()
        print(f'1{admin.name}\n{admin.subjects}\n{admin.classes}\n{admin.schedule}\n')

    except (IndexError, ValueError):
        await bot.send_message(message.chat.id, text='‚ùó–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–∏–π —Ñ–æ—Ä–º–∞—Ç –≤—Ö—ñ–¥–Ω–∏—Ö –¥–∞–Ω–∏—Ö. –°–ø—Ä–æ–±—É–π—Ç–µ —â–µ —Ä–∞–∑')

    except SyntaxError:
        pass


@dp.callback_query_handler(lambda c: c.data and c.data.startswith('subject'))
async def subjects_keyboard_callback_data_handler(call: types.CallbackQuery):
    admin.switch_user(f'@{call.message.from_user.username}')

    if call.data == 'subject –î–∞–ª—ñ ‚û°Ô∏è':
        classes_kb = admin.create_kb(
            ('1', 'class 1'), ('2', 'class 2'), ('3', 'class 3'), ('4', 'class 4'), ('5', 'class 5'), ('6', 'class 6'),
            ('7', 'class 7'), ('8', 'class 8'), ('9', 'class 9'), ('10', 'class 10'), ('11', 'class 11'),
            ('–ù–∞–∑–∞–¥ ‚¨ÖÔ∏è', 'class –ù–∞–∑–∞–¥ ‚¨ÖÔ∏è'), ('–ü—Ä–æ–¥–æ–≤–∂–∏—Ç–∏ ‚û°Ô∏è', 'class –ü—Ä–æ–¥–æ–≤–∂–∏—Ç–∏ ‚û°Ô∏è'),
            kb_type='inline', tick_places=admin.classes
        )

        await bot.edit_message_text(chat_id=call.message.chat.id, text='üîÄ –í–∏–±–µ—Ä—ñ—Ç—å –∫–ª–∞—Å–∏:',
                                    message_id=call.message.message_id, reply_markup=classes_kb)

    else:
        subj = call.data.split()[1]
        if subj not in admin.subjects:
            admin.subjects.append(subj)
        else:
            admin.subjects.remove(subj)

        subjs_kb = admin.create_kb(
            ('–ú–∞—Ç–µ–º–∞—Ç–∏–∫–∞', 'subject –ú–∞—Ç–µ–º–∞—Ç–∏–∫–∞'), ('–£–∫—Ä.–º–æ–≤–∞', 'subject –£–∫—Ä.–º–æ–≤–∞'),
            ('–ê–Ω–≥–ª.–º–æ–≤–∞', 'subject –ê–Ω–≥–ª.–º–æ–≤–∞'), ('–î–∞–ª—ñ ‚û°Ô∏è', 'subject –î–∞–ª—ñ ‚û°Ô∏è'),
            kb_type='inline', tick_places=admin.subjects
        )

        try:
            await bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id,
                                        text='üîÄ –í–∏–±–µ—Ä—ñ—Ç—å –ø—Ä–µ–¥–º–µ—Ç–∏, –Ω–∞ —è–∫–∏—Ö –≤–∏ —Å–ø–µ—Ü—ñ–∞–ª—ñ–∑—É—î—Ç–µ—Å—å:', reply_markup=subjs_kb)
        except MessageNotModified:
            pass

    print(f'2{admin.name}\n{admin.subjects}\n{admin.classes}\n{admin.schedule}\n')


@dp.callback_query_handler(lambda c: c.data and c.data.startswith('class'))
async def classes_keyboard_callback_data_handler(call: types.CallbackQuery):
    global selecting_expected, schedule_expected

    admin.switch_user(f'@{call.message.from_user.username}')

    if call.data == 'class –ù–∞–∑–∞–¥ ‚¨ÖÔ∏è':
        subjs_kb = admin.create_kb(
            ('–ú–∞—Ç–µ–º–∞—Ç–∏–∫–∞', 'subject –ú–∞—Ç–µ–º–∞—Ç–∏–∫–∞'), ('–£–∫—Ä.–º–æ–≤–∞', 'subject –£–∫—Ä.–º–æ–≤–∞'),
            ('–ê–Ω–≥–ª.–º–æ–≤–∞', 'subject –ê–Ω–≥–ª.–º–æ–≤–∞'), ('–î–∞–ª—ñ ‚û°Ô∏è', 'subject –î–∞–ª—ñ ‚û°Ô∏è'),
            kb_type='inline', tick_places=admin.subjects
        )

        await bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id,
                                    text='üîÄ –í–∏–±–µ—Ä—ñ—Ç—å –ø—Ä–µ–¥–º–µ—Ç–∏, –Ω–∞ —è–∫–∏—Ö –≤–∏ —Å–ø–µ—Ü—ñ–∞–ª—ñ–∑—É—î—Ç–µ—Å—å:', reply_markup=subjs_kb)

    elif call.data == 'class –ü—Ä–æ–¥–æ–≤–∂–∏—Ç–∏ ‚û°Ô∏è':
        if not admin.subjects or not admin.classes:
            await bot.send_message(call.message.chat.id, text='‚ùó–ù–µ –≤–∏–±—Ä–∞–Ω—ñ –ø—Ä–µ–¥–º–µ—Ç–∏ –∞–±–æ –∫–ª–∞—Å–∏')
        else:
            await bot.send_message(call.message.chat.id, text='–ß—É–¥–æ–≤–æ! üòÄ –¢–µ–ø–µ—Ä —Å—Ç–≤–æ—Ä—ñ—Ç—å —Å–≤—ñ–π —Ä–æ–∑–∫–ª–∞–¥!')
            await bot.send_message(call.message.chat.id, text='üî° –ù–∞–ø–∏—à—ñ—Ç—å –±–∞–∂–∞–Ω–∏–π –≥—Ä–∞—Ñ—ñ–∫ –∑–∞–Ω—è—Ç—å '
                                                              '–ö–æ–∂–µ–Ω –¥–µ–Ω—å/–¥—ñ–∞–ø–∞–∑–æ–Ω –¥–Ω—ñ–≤ —á–µ—Ä–µ–∑ ; '
                                                              '–ú–æ–∂–Ω–∞ —á–µ—Ä–µ–∑ ; —Ç–∞ –∑ –Ω–æ–≤–æ–≥–æ —Ä—è–¥–æ—á–∫–∞, —è–∫ —É –ø—Ä–∏–∫–ª–∞–¥—ñ\n'
                                                              '–ü–µ—Ä–µ–π—Ç–∏ –Ω–∞ –Ω–æ–≤–∏–π —Ä—è–¥–æ—á–æ–∫ Shift+Enter\n'
                                                              '–ü—Ä–∏–∫–ª–∞–¥:\n'
                                                              '08.06-10.06: 10.00-19.00;\n11.06: 12.00-16.00;\n'
                                                              '12.06: 13.00-21.00;\n13.06, 14.06: 8.00-19.00')
            selecting_expected, schedule_expected = False, True

    elif call.data == 'class –ü—ñ–¥—Ç–≤–µ—Ä–¥–∏—Ç–∏ ‚úÖÔ∏è':
        admin._edit_classes(', '.join(sorted(admin.classes)))
        await bot.send_message(call.message.chat.id, text='–ö–ª–∞—Å–∏ –∑–º—ñ–Ω–µ–Ω–æ üòÜ')

    else:
        curr_class = call.data.split()[1]
        if curr_class not in admin.classes:
            admin.classes.append(curr_class)
        else:
            admin.classes.remove(curr_class)

        if not new_classes_kb:
            classes_kb = admin.create_kb(
                ('1', 'class 1'), ('2', 'class 2'), ('3', 'class 3'), ('4', 'class 4'), ('5', 'class 5'),
                ('6', 'class 6'), ('7', 'class 7'), ('8', 'class 8'), ('9', 'class 9'), ('10', 'class 10'),
                ('11', 'class 11'), ('–ù–∞–∑–∞–¥ ‚¨ÖÔ∏è', 'class –ù–∞–∑–∞–¥ ‚¨ÖÔ∏è'), ('–ü—Ä–æ–¥–æ–≤–∂–∏—Ç–∏ ‚û°Ô∏è', 'class –ü—Ä–æ–¥–æ–≤–∂–∏—Ç–∏ ‚û°Ô∏è'),
                kb_type='inline', tick_places=admin.classes
            )

        else:
            classes_kb = admin.create_kb(
                ('1', 'class 1'), ('2', 'class 2'), ('3', 'class 3'), ('4', 'class 4'), ('5', 'class 5'),
                ('6', 'class 6'), ('7', 'class 7'), ('8', 'class 8'), ('9', 'class 9'), ('10', 'class 10'),
                ('11', 'class 11'), ('–ü—ñ–¥—Ç–≤–µ—Ä–¥–∏—Ç–∏ ‚úÖÔ∏èÔ∏è', 'class –ü—ñ–¥—Ç–≤–µ—Ä–¥–∏—Ç–∏ ‚úÖÔ∏è'),
                kb_type='inline', tick_places=admin.classes
            )

        try:
            await bot.edit_message_text(chat_id=call.message.chat.id, text='üîÄ –í–∏–±–µ—Ä—ñ—Ç—å –∫–ª–∞—Å–∏:',
                                        message_id=call.message.message_id, reply_markup=classes_kb)
        except MessageNotModified:
            pass

    print(f'3{admin.name}\n{admin.subjects}\n{admin.classes}\n{admin.schedule}\n')

executor.start_polling(dp, skip_updates=True)
